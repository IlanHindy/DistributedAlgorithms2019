<Application x:Class="Distributed_Algorithms.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:Distributed_Algorithms"
             StartupUri="UserInterface\Main Windows\MainWindow.xaml">
    <Application.Resources>
        <!-- Tips
        Changing attributes :
        If the property can be accesses from the Control Style (like BorderThickness)
            It has to be set in the Control Style
        If the property is a property of a part of the Control and not the control (like CornerRadious)
            It must be set in the style for the part
        -->
        
        <!-- Menue Item -->
        <Style TargetType="{x:Type MenuItem}">
            <Setter Property="FontSize" Value="12" />
            <Setter Property="FontFamily" Value="Consolas"/>
            <Setter Property="Background" Value="White"/>
            <Setter Property="Height" Value="30"/>
            <Setter Property="HeaderTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <TextBlock Text="{Binding}" VerticalAlignment="Center" HorizontalAlignment="Left"/>
                    </DataTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Icon">
                <Setter.Value>
                    <Image Source="{Binding Icon}" Style="{Binding StaticResource MenueItemImage}" />
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Menue -->
        <Style TargetType="{x:Type Menu}">
            <Setter Property="FontSize" Value="12" />
            <Setter Property="FontFamily" Value="Consolas"/>
            <Setter Property="Background" Value="White" />
            <Setter Property="HorizontalAlignment" Value="Left" />
        </Style>

        <!-- Tool Tip -->
        <Style TargetType="ToolTip">
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="Background" Value="LightYellow"/>
            <Setter Property="BorderBrush" Value="Black"/>
        </Style>

        <!-- ToolBar button -->
        <Style  x:Key="{x:Static ToolBar.ButtonStyleKey}" TargetType="Button">
            <Setter Property="FontSize" Value="12" />
            <Setter Property="FontFamily" Value="Colibri"/>
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="BorderBrush" Value="Black" />
            <Setter Property="Margin" Value="3"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="Background" Value="White" />
            <Setter Property="Visibility" Value="Visible" />
            <Setter Property="Button.Effect">
                <Setter.Value>
                    <DropShadowEffect Color="Black" Direction="320" ShadowDepth="3" BlurRadius="5" />
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Visibility" Value="Collapsed" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- Regular button -->
        <Style TargetType="{x:Type Button}">
            <Setter Property="FontSize" Value="12" />
            <Setter Property="FontFamily" Value="Calibri"/>
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="BorderBrush" Value="Black" />
            <Setter Property="Margin" Value="3"/>
            <Setter Property="Padding" Value="5,0"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="Background" Value="White" />
            <Setter Property="Visibility" Value="Visible" />
            <Setter Property="Button.Effect">
                <Setter.Value>
                    <DropShadowEffect Color="Black" Direction="320" ShadowDepth="3" BlurRadius="5" />
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Visibility" Value="Collapsed" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- List Box Item -->
        <Style TargetType="{x:Type ListBoxItem}">
            <Style.Resources>
                <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="Blue" />
                <SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}" Color="White"/>
                <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}" Color="Blue" />
                <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}" Color="White" />
            </Style.Resources>
            <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="True" />
                    <Condition Property="IsEnabled" Value="False" />
                </MultiTrigger.Conditions>
                <MultiTrigger.Setters>
                    <Setter Property="Foreground" Value="Yellow" />
                </MultiTrigger.Setters>
            </MultiTrigger>
            </Style.Triggers>
        </Style>
        
        <!-- ListBox -->
        <Style TargetType="{x:Type ListBox}">
            <Setter Property="BorderThickness" Value="1"/>
        </Style>

        <!-- Image in Menue Item -->
        <Style TargetType="Image" x:Key="MenueItemImage">
            <Setter Property="Height" Value="20"/>
            <Setter Property="Width" Value="20"/>
            <Setter Property="Margin" Value="0" />
            <Setter Property="RenderOptions.BitmapScalingMode" Value="HighQuality"/>
            <Setter Property="Stretch" Value="Uniform"/>
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="HorizontalAlignment" Value="Center" />
        </Style>

        <!-- Image in Tool Bar -->
        <Style TargetType="Image" x:Key="ToolBarImage">
            <Setter Property="RenderOptions.BitmapScalingMode" Value="Fant"/>
            <Setter Property="Height" Value="30"/>
            <Setter Property="Width" Value="30"/>
            <Setter Property="Margin" Value="0" />
        </Style>

        <!-- ToolBar -->
        <Style TargetType="ToolBar">
            <Setter Property="Background" Value="White"/>
        </Style>

        <Style TargetType="Separator">
            <Setter Property="Foreground" Value="Black" />
            <Setter Property="Background" Value="White"/>
            <Setter Property="Margin" Value="3"/>
        </Style>

        <!-- TextBox -->
        <!--
        In order that the border will be seen the border attributes (BorderThickness, BorderBrush) has to be set
        -->
        <Style TargetType="{x:Type TextBox}">
            <Setter Property="Template">
                <Setter.Value>
                    <!-- Modify default template, to change triggers -->
                    <ControlTemplate TargetType="{x:Type TextBoxBase}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="False" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Label -->
        <Style TargetType="{x:Type Label}">
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="BorderBrush" Value="Black"/>
        </Style>

        <!-- Border -->
        <Style TargetType="{x:Type Border}">
            <Setter Property="CornerRadius" Value="3"/>          
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="BorderBrush" Value="Black"/>
        </Style>

        <!--<Style x:Key="flatTextBox" TargetType="{x:Type TextBox}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Grid>
                            <Rectangle  Stroke="{StaticResource ResourceKey=detailMarkBrush}" StrokeThickness="1" Cor/>
                            <TextBox Margin="1" Text="{TemplateBinding Text}" BorderThickness="0"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>-->

        <Style TargetType="TextBox" x:Key="SingleLineTextBox">
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="Background" Value="White"/>
            <Setter Property="CaretBrush" Value="Black"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TextBox">
                        <Border SnapsToDevicePixels="True" BorderThickness="1" BorderBrush="Blue" Background="White">
                            <ScrollViewer x:Name="PART_ContentHost" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalScrollBarVisibility="Disabled" HorizontalScrollBarVisibility="Hidden" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </Application.Resources>
</Application>
